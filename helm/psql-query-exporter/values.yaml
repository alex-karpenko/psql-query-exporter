# Default values for psql-query-exporter.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: ghcr.io/alex-karpenko/psql-query-exporter
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 9090

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

nodeSelector: {}

tolerations: []

affinity: {}

secrets: []
#  - psql-query-exporter

# info or debug, anything else - warning
logLevel: warning

config: {}
#  defaults:
#    scrape_interval: 30s
#    query_timeout: 5s
#
#  sources:
#    postgres:
#      host: postgres.default.svc.cluster.local
#      port: 5432
#      user: ${PG_USER}
#      password: ${PG_PASSWORD}
#      sslmode: require
#      metric_prefix: postgres_state
#
#      databases:
#        - dbname: postgres
#          queries:
#            - metric_name: replication_lag
#              query: |
#                select slot_name, slot_type, active::text, 
#                (case when not pg_is_in_recovery() then pg_current_wal_lsn() - restart_lsn end)::float as lag_bytes
#                from pg_replication_slots;
#              values:
#                single:
#                  field: lag_bytes
#                  type: float
#              var_labels:
#                - slot_name
#                - slot_type
#                - active
